{"version":3,"sources":["../src/package/components/Modal/Modal.tsx","../src/package/components/IconButton/IconButton.tsx","../src/package/components/ConnectWeb3Modal.tsx","../src/package/components/ConnectButton/ConnectButton.tsx","../src/package/components/MagicEmailModal.tsx","../src/package/connectors.ts","../src/package/components/Web3Provider.tsx","../src/package/styles/theme.tsx","../src/package/hooks.tsx"],"sourcesContent":["import React from \"react\";\nimport { IconButton } from \"../IconButton\";\nimport { Dialog, DialogContent, DialogTitle, Typography } from \"@mui/material\";\nimport styles from \"./Modal.module.css\"\n\ninterface ModalProps {\n  open: boolean;\n  setOpen: (x: boolean) => void;\n  title?: any;\n  children?: any;\n  setBack?: (x: any) => void;\n}\n\nexport const Modal = ({\n  open,\n  setOpen,\n  title,\n  children,\n  setBack\n}: ModalProps) => {\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleBack = () => {\n    setBack(null);\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n    > \n      <IconButton\n        icon={{\n          src: \"close.svg\",\n          alt: \"close-icon\"\n        }}\n        onClick={handleClose}\n        orientation={\"top-right\"}\n      />\n      {setBack && (\n        <IconButton\n          icon={{\n            src: \"chevron-left.svg\",\n            alt: \"close-button\"\n          }}\n          onClick={handleBack}\n          orientation={\"top-left\"}\n        >\n          <Typography>\n            {\"  Back\"}\n          </Typography>\n        </IconButton>\n      )}\n      <DialogTitle className={styles.title}>\n        {title}\n      </DialogTitle>\n      <DialogContent>\n        {children}\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React, { useMemo } from \"react\";\nimport { Button } from \"@mui/material\";\nimport styles from \"./IconButton.module.css\"\nimport { ButtonProps } from \"@mui/material/Button/Button\";\n\ninterface IconButtonProps extends ButtonProps {\n  icon?: any;\n  children?: any;\n  onClick?: any;\n  orientation: string;\n}\n\nexport const IconButton = (props: IconButtonProps) => {\n  const { icon, onClick, orientation, children } = props;\n\n  const className = useMemo(() => {\n    const classNames = [styles.iconButton];\n\n    switch (orientation) {\n      case \"top-left\":\n        classNames.push(styles.topLeft);\n        break;\n      case \"top-right\":\n        classNames.push(styles.topRight);\n        break;\n      default:\n        break;\n    }\n    return classNames.join(\" \");\n  }, [orientation]);\n\n  return (\n    <Button\n      variant=\"text\"\n      onClick={onClick}\n      className={className}\n      {...props}\n    >\n      {icon && (<img style={{ width: 15, height: 15 }} src={icon.src} alt={icon.alt} />)}\n      {children && children}\n    </Button>\n  )\n}\n","import { Modal } from \"./Modal\";\nimport { Typography } from \"@mui/material\";\nimport styles from \"./Modal/Modal.module.css\"\nimport { ConnectButton } from \"./ConnectButton\";\nimport { useWeb3 } from \"@3rdweb/hooks\"\nimport { useState } from \"react\";\nimport { MagicEmailModal } from \"./MagicEmailModal\";\nimport { connectorsMetadata } from \"../connectors\";\n\nexport const ConnectWeb3Modal = ({ open, setOpen }) => {\n  const { connectWallet } = useWeb3()\n  const [selectedConnector, setSelectedConnector] = useState(undefined)\n\n  const connect = (connector) => {\n    if (connector === \"magic\") {\n      setSelectedConnector(\"magic\")\n      return\n    }\n    connectWallet(connector).then(() => {\n      setOpen(false)\n    })\n  };\n\n\n  if (selectedConnector === \"magic\") {\n    return (\n      <MagicEmailModal \n        open={true}\n        setSelectedConnector={setSelectedConnector}\n      />\n    );\n  }\n\n  return (\n    <Modal\n      open={open}\n      setOpen={setOpen}\n      title=\"Sign in with wallet\"\n    >\n      <div className={styles.content}>\n        {/* @ts-ignore */}\n        <Typography sx={{ mt: 2, mb: 5 }} variant=\"description\">\n          Connect your wallet to sign in. If you don't have a wallet, sign in with email.\n        </Typography>\n        {Object.entries(connectorsMetadata).map(([key, { icon, name }], i) => (\n          <ConnectButton\n            key={key}\n            sx={i !== 0 ? {\n              mt: 3\n            } : undefined}\n            onClick={() => connect(key)}\n            icon={icon}>\n            {name}\n          </ConnectButton>\n        ))}\n      </div>\n    </Modal>\n  );\n}\n\nexport default ConnectWeb3Modal\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\nimport styles from \"./ConnectButton.module.css\"\nimport { ButtonProps } from \"@mui/material/Button/Button\";\n\ninterface ConnectButtonProps extends ButtonProps {\n    icon?: any;\n    children: any;\n    onClick?: any;\n}\n\nexport const ConnectButton = (props: ConnectButtonProps) => {\n    const { icon, onClick, children } = props\n    return <Button\n        variant=\"contained\"\n        onClick={onClick}\n        className={styles.connectButton}\n        {...props}\n    >\n        {icon && <img style={{width: 24, marginRight: 8}} src={icon} alt=\"wallet-icon\"/>}\n        {children}\n    </Button>\n}\n","import { useWeb3 } from \"@3rdweb/hooks\";\nimport { Modal } from \"./Modal\";\nimport styles from \"./Modal/Modal.module.css\";\nimport { TextField, Typography } from \"@mui/material\";\nimport { ConnectButton } from \"./ConnectButton\";\n// import { IconButton } from \"./IconButton\";\nimport { useState } from \"react\";\n\nexport const MagicEmailModal = ({ open, setSelectedConnector }) => {\n  const { connectWallet } = useWeb3()\n  const [isOpen, setIsOpen] = useState(open ?? false)\n  const [email, setEmail] = useState<string | undefined>()\n\n  return <Modal\n    open={isOpen}\n    setOpen={setIsOpen}\n    title=\"Sign in with email\"\n    setBack={setSelectedConnector}\n  >\n    <div className={styles.content}>\n      {/* @ts-ignore */}\n      <Typography sx={{ mt: 2, mb: 5 }} variant=\"description\">\n        Enter your email to receive your sign in link. Your wallet will be created automagically ðŸª„\n      </Typography>\n      <TextField\n        sx={{ mb: 5 }}\n        variant=\"filled\"\n        type=\"text\"\n        label=\"Email\"\n        placeholder=\"example@mail.com\"\n        onChange={(e) => {\n          setEmail(e.target.value)\n        }}\n      />\n      <ConnectButton onClick={() => {\n        connectWallet(\"magic\", {\n          email\n        }).then(() => {\n          setIsOpen(false)\n        })\n      }}>\n        Get link\n      </ConnectButton>\n    </div>\n  </Modal>\n}\n","export const connectorsMetadata = {\n    injected: {\n        icon: \"metamask.png\",\n        name: \"Metamask\"\n    },\n    walletconnect: {\n        icon: \"rainbow.png\",\n        name: \"Rainbow or QR code\"\n    },\n    walletlink: {\n        icon: \"coinbase.png\",\n        name: \"Coinbase\"\n    },\n    magic: {\n        icon: \"email.png\",\n        name: \"Email\"\n    },\n}\n\nexport const defaultConnectors = {\n    injected: {},\n    // magic: {\n    //     apiKey: \"pk_...\", // Your Magic.link api key\n    //     chainId: 1, // The chain ID you want to allow on Magic.link\n    // },\n    walletconnect: {},\n    walletlink: {\n        appName: \"Buildship Example\",\n        url: \"https://buildship.xyz\",\n        darkMode: false,\n    },\n};\n","import { IThirdwebContext, ThirdwebWeb3Provider, ThirdwebWeb3ProviderProps } from \"@3rdweb/hooks\";\nimport React from \"react\";\nimport { Theme, ThemeProvider } from \"@mui/material\";\n\nimport { defaultConnectors } from \"../connectors\";\nimport { defaultTheme } from \"../styles\";\n\nexport interface Web3ProviderProps extends Omit<ThirdwebWeb3ProviderProps, \"connectors\"> {\n    theme?: Theme;\n    connectors?: IThirdwebContext[\"connectors\"];\n}\n\nexport const Web3Provider: React.FC<Web3ProviderProps> = ({\n    theme = defaultTheme,\n    connectors = defaultConnectors,\n    children,\n    ...props\n}) => {\n    return (\n    <ThirdwebWeb3Provider {...props} connectors={connectors}>\n        <ThemeProvider theme={theme}>\n          {children}\n        </ThemeProvider>\n    </ThirdwebWeb3Provider>\n);\n};\n","import {createTheme} from \"@mui/material\";\n\nexport const defaultTheme = createTheme({\n    palette: {\n        primary: {\n            main: \"#1f1f1f\",\n        },\n    },\n    spacing: [0, 4, 8, 12, 16, 24, 32, 64],\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                root: {\n                    \"@media only screen and (max-width: 540px)\": {\n                          padding: \"40px 10px\",\n                          margin: 0,\n                          width: \"100%\",\n                          height: \"100vh\",\n                          borderRadius: 0\n                      }\n                }\n            }\n        },\n        MuiButton: {\n            styleOverrides: {\n                root: {\n                    boxShadow: \"none\"\n                },\n                contained: {\n                    padding: \"8px 32px\",\n                    color: \"#fff\",\n                    borderRadius: \"5px\",\n                    \"&:hover\": {\n                        boxShadow: \"none\"\n                    },\n                },\n                outlined: {\n                    padding: \"8px 32px\",\n                    borderRadius: \"5px\",\n                    \"&:hover\": {\n                        boxShadow: \"none\"\n                    },\n                }\n            }\n        },\n        MuiDialog: {\n            styleOverrides: {\n                paper: {\n                    backgroundImage: \"inherit\",\n                    borderRadius: \"20px\",\n                    padding: \"40px 60px\"\n                }\n            }\n        },\n        MuiDialogTitle: {\n            styleOverrides: {\n                root: {\n                    padding: \"0px\",\n                    fontSize: \"28px\",\n                }\n            }\n        },\n        MuiChip: {\n            styleOverrides: {\n                label: {\n                    color: \"rgba(0, 0, 0, 0.6)\"\n                }\n            }\n        },\n        MuiFilledInput: {\n            styleOverrides: {\n                root: {\n                    borderRadius: 8,\n                    '&::before': {\n                        borderBottom: \"0px !important\",\n                    },\n                    '&::after': {\n                        borderBottom: \"0px !important\",\n                    }\n                },\n                input: {\n                    paddingLeft: 16,\n                    paddingRight: 16,\n                    color: \"#171A1F\",\n                    '&:-webkit-autofill': {\n                        borderRadius: \"inherit\"\n                    }\n                }\n            }\n        },\n        MuiInputLabel: {\n            styleOverrides: {\n                root: {\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                    transform: \"translate(16px, 16px) scale(1)\",\n                    color: \"#9D9FA3\",\n                    marginTop: \"0 !important\",\n                },\n                shrink: {\n                    fontSize: \"13px\",\n                    lineHeight: \"18px\",\n                    transform: \"translate(16px, 8px) scale(1)\",\n                    color: \"#71747A\"\n                }\n            }\n        },\n        MuiAutocomplete: {\n            styleOverrides: {\n                root: {\n                    '& .MuiFilledInput-root': {\n                        paddingLeft: 16,\n                        '& .MuiFilledInput-input': {\n                            lineHeight: \"24px\",\n                            padding: \"0px\",\n                            paddingTop: \"6px\",\n                            paddingBottom: \"8px\"\n                        }\n                    },\n                }\n            }\n        }\n    },\n    typography: {\n        fontFamily: \"Inter, San Francisco, Roboto, Helvetica, sans-serif\",\n        button: {\n            color: \"#fff\",\n            fontSize: \"16px !important\",\n            textTransform: \"none\",\n            whiteSpace: \"pre-wrap\",\n            margin: 0,\n            padding: 0\n        },\n        h4: {\n            fontWeight: 600\n        },\n        h5: {\n            fontWeight: 500\n        },\n        subtitle1: {\n            marginTop: \"16px !important\",\n            fontWeight: 400,\n            color: \"rgba(0, 0, 0, 0.7)\"\n        },\n        // @ts-ignore\n        description: {\n            fontWeight: 300,\n            color: \"rgba(156, 163, 175)\",\n            lineHeight: 1.5\n        },\n\n    },\n});\n","import { useWeb3, useSwitchNetwork } from \"@3rdweb/hooks\";\n\nexport { useWeb3, useSwitchNetwork };\n"],"mappings":"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","names":[]}